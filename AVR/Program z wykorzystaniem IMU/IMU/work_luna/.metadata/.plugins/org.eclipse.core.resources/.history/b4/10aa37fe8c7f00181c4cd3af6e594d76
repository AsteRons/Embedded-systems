/*
 * main.c
 *
 *  Created on: 3 lip 2018
 *      Author: Symulator 3D
 */
#include <stdlib.h>
#include <avr/io.h>
#include <avr/interrupt.h>
#include <avr/pgmspace.h>
#include <util/delay.h>
#include <math.h>  //include libm

#include "mpu6050/mpu6050.h"

#define UART_BAUD_RATE 57600
#include "uart/uart.h"


// Przycisk TEST definicja
#define KEY_PIN (1<<PC3)
#define KEY_DOWN (PINC & KEY_PIN)
uint8_t lock = 0;
uint8_t blink = 0;


int main(void) {


	//  deklaracja zmiennych IMU -6050
	#if MPU6050_GETATTITUDE == 1 || MPU6050_GETATTITUDE == 2

    double qw = 1.0f;
	double qx = 0.0f;
	double qy = 0.0f;
	double qz = 0.0f;
	double roll = 0.0f;
	double pitch = 0.0f;
	double yaw = 0.0f;

	#endif


    //init uart
	uart_init(UART_BAUD_SELECT(UART_BAUD_RATE,F_CPU));

	//init interrupt
	sei();

	//init mpu6050
	mpu6050_init();
	_delay_ms(50);



	for(;;) {

	/*
	 // IMU - 6050 Inicjalizacja
		#if MPU6050_GETATTITUDE == 1
		mpu6050_getQuaternion(&qw, &qx, &qy, &qz);
		mpu6050_getRollPitchYaw(&roll, &pitch, &yaw);
		_delay_ms(10);
		#endif

		// IMU - 6050 - Komuniakcja
		#if MPU6050_GETATTITUDE == 1 || MPU6050_GETATTITUDE == 2
		char itmp[10];
		uart_puts("IMU ");
		dtostrf(roll, 3, 3, itmp); uart_puts(itmp); uart_putc(' ');
		dtostrf(pitch, 3, 3, itmp); uart_puts(itmp); uart_putc(' ');
		dtostrf(yaw, 3, 3, itmp); uart_puts(itmp); uart_putc(' ');
		uart_puts("\r\n");

		#endif

*/

			// Przycisk TEST Implementacja

		if(!lock && !(PINC & KEY_PIN)) /*Reakcja na wciœniêty przycisk. Sprawdzenie, czy zmienna lock ma wartoœæ 0 i czy wystêpuje stan niski na pinie PA1*/
			{
				lock = 1; /*Zapisanie do zmiennej lock wartoœci 1. Zablokowanie klawisza.*/
				blink = (blink == 0)? 1 : 0; /*Zmiana wartoœci zmiennej blink miêdzy wartoœciami 1 i 0*/
				_delay_ms(20); /*Zatrzymanie wykonywania pêtli na 20 ms po naciœniêciu przycisku. Czas potrzebny eliminacjê drgañ styków*/
			} else if (lock && (PINC & KEY_PIN)) /*Sprawdzenie czy zmienna lock ma wartoœæ 1 i czy na pinie PA1 jest stan wysoki. Sprawdzenie, czy przycisk zosta³ zwolniony.*/
			{
				_delay_ms(20);/*Zatrzymanie wykonywania pêtli na 20 ms po zwolnieniu przycisku. Czas potrzebny eliminacjê drgañ styków*/
				if(lock && (PINC & KEY_PIN)) /* Sprawdzenie, czy przycisk jest nadal zwolniony*/
				{
					lock = 0; /*Zapisanie do zmiennej lock wartoœci 0. Odblokowanie klawisza.*/
				}
			}
			if(blink) /*Sprawdzenie czy zmienna blink ma wartoœæ 1*/
			{
				uart_puts("P2 1\r\n"); /*Zmiana stanu na pinie PA0, gdy zmienna blink ma wartoœæ 1*/
				 _delay_ms(500); /*Zatrzymanie pracy programu na czas 500 ms*/
			}
			else
					{
				uart_puts("P2 0\r\n"); /*Gdy zmienna blink ma wartoœæ 0 i na pinie PA0 jest stan wysoki ustawienie na pinie PA0 stanu niskiego*/
					}


		    }





}


